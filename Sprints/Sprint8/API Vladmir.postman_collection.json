{
	"info": {
		"_postman_id": "b5f02c68-a658-49af-9da3-bebbf1c8ba93",
		"name": "API Vladmir",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "23482990"
	},
	"item": [
		{
			"name": "teste API ON",
			"item": [
				{
					"name": "Teste API ON",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste do Status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Teste do Tempo de resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostCat}}/categoria"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Categorias",
			"item": [
				{
					"name": "Cadastrar Categoria",
					"item": [
						{
							"name": "Teste de Limites",
							"item": [
								{
									"name": "2 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"pm.test(\"teste da Mensagem de Erro\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"minimo de 3 caracteres nÃ£o atingido\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"na\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/categoria"
									},
									"response": []
								},
								{
									"name": "3 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a(\"number\");});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo a subcategoria\r",
													"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
													"  pm.expect(jsonData.subCategoria).to.be.null;\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"wni\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/categoria"
									},
									"response": []
								},
								{
									"name": "25 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo a subcategoria\r",
													"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
													"  pm.expect(jsonData.subCategoria).to.be.null;\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"testedelimwnegcsracbstpqs\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/categoria"
									},
									"response": []
								},
								{
									"name": "50 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a(\"number\");});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo a subcategoria\r",
													"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
													"  pm.expect(jsonData.subCategoria).to.be.null;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"uestedelimitexoaracteretsssssqsitnsbspesssssssssss\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria"
									},
									"response": []
								},
								{
									"name": "51 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"pm.test(\"teste da Mensagem de Erro\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"Tamanho maximo de 50 caracteres excedido\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"TestedelimiteXcaracteressssdsssssssssssssssssssssss\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria"
									},
									"response": []
								}
							]
						},
						{
							"name": "Insercao de numeros e caracteres especiais",
							"item": [
								{
									"name": "Numeros",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria"
									},
									"response": []
								},
								{
									"name": "letras + numeros",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria"
									},
									"response": []
								},
								{
									"name": "Numeros + caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"123!@#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria"
									},
									"response": []
								},
								{
									"name": "letras + caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc!@#\"\r\n} ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria"
									},
									"response": []
								},
								{
									"name": "letras + numeros + caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc123!@#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"//teste do Status Code",
											"pm.test(\"teste do Status Code\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//teste do Tempo de Resposta",
											"pm.test(\"teste do Tempo de Resposta\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//teste da Mensagem de Erro",
											"const jsonData = pm.response.json();",
											"",
											"pm.test(\"teste da Mensagem de Erro\", () => {",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql('O campo nome deve conter apenas letras');",
											"});",
											"",
											""
										]
									}
								}
							]
						},
						{
							"name": "#Campo em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"teste da Mensagem de Erro\", () => {\r",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql('O Campo nome Ã© obrigatorio');\r",
											" \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria"
							},
							"response": []
						},
						{
							"name": "#Cadastro utilizando nome composto/espaÃ§o no nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Padaria de testssaaaeessssfess\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria"
							},
							"response": []
						},
						{
							"name": "#Teste letra maiuscula",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"PaodsarsaibasaaafsS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria"
							},
							"response": []
						},
						{
							"name": "#Cadastro duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"pm.test(\"Body contains string\",() => {\r",
											"  pm.expect(pm.response.text()).to.include(\"A categoria ja existe\");\r",
											"});\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Konopelski\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria"
							},
							"response": []
						},
						{
							"name": "#Cadastro com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomLastName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria"
							},
							"response": []
						}
					]
				},
				{
					"name": "Editar Categoria",
					"item": [
						{
							"name": "Teste de Limites",
							"item": [
								{
									"name": "2 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"teste da Mensagem de Erro\", () => {\r",
													"  pm.expect(jsonData.errors.Nome[0]).to.eql('minimo de 3 caracteres nÃ£o atingido');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"ur\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/categoria/3"
									},
									"response": []
								},
								{
									"name": "3 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo a subcategoria\r",
													"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
													"  pm.expect(jsonData.subCategoria).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"crb\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/categoria/5"
									},
									"response": []
								},
								{
									"name": "25 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo a subcategoria\r",
													"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
													"  pm.expect(jsonData.subCategoria).to.be.null;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"testedecarateressssssstes\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/categoria/4"
									},
									"response": []
								},
								{
									"name": "50 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo a subcategoria\r",
													"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
													"  pm.expect(jsonData.subCategoria).to.be.null;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"testedelpmiteccaracteressssssssssssssssssssassssss\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria/4"
									},
									"response": []
								},
								{
									"name": "51 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"teste da Mensagem de Erro\", () => {\r",
													"  pm.expect(jsonData.errors.Nome[0]).to.eql('O campo nome excedeu a quantidade maxima de 50 caracteres');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"testedelimitexcaracteresssrosssssssssssssssssssssss\",\r\n    \"Status\": true\r\n}\r\n\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria/6"
									},
									"response": []
								}
							]
						},
						{
							"name": "AlteraÃ§Ã£o com numeros e caracteres especiais",
							"item": [
								{
									"name": "Numeros",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"23456\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria/86"
									},
									"response": []
								},
								{
									"name": "letras + numeros",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Zer0\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/categoria/85"
									},
									"response": []
								},
								{
									"name": "Numeros + caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"234!@#\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria/85"
									},
									"response": []
								},
								{
									"name": "letras + caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"34$!\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria/85"
									},
									"response": []
								},
								{
									"name": "letras + numeros + caracteres especiais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc234!@#\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Categoria/85"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"//teste do Status Code",
											"pm.test(\"teste do Status Code\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//teste do Tempo de Resposta",
											"pm.test(\"teste do Tempo de Resposta\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//teste da Mensagem de Erro",
											"const jsonData = pm.response.json();",
											"",
											"pm.test(\"teste da Mensagem de Erro\", () => {",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"o Campo nome deve conter apenas letras\");",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "#EdiÃ§Ã£o utilizando nome composto/espaÃ§o no nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"testa testa\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/2"
							},
							"response": []
						},
						{
							"name": "#Edicao em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"teste da Mensagem de Erro\", () => {\r",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"O campo nome Ã© obrigatÃ³rio\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\": \" \",\r\n    \"Status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/4"
							},
							"response": []
						},
						{
							"name": "#Edicao de nome e status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"tstnomstat\",\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/9"
							},
							"response": []
						},
						{
							"name": "#Edicao de status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Konopelski\",\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/5"
							},
							"response": []
						},
						{
							"name": "#Cadastro editado com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomLastName}}\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/4"
							},
							"response": []
						},
						{
							"name": "#Cadastro editado nome duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"teste da Mensagem de Erro\", () => {\r",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"A categoria ja existe\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Joseph\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/4"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Subcategorias",
			"item": [
				{
					"name": "Cadastrar SubCategoria",
					"item": [
						{
							"name": "Teste de limites",
							"item": [
								{
									"name": "2 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"pm.test(\"teste da Mensagem de Erro\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"minimo de 3 caracteres nÃ£o atingido\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"ve\",\r\n  \"categoriaId\": 4\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria"
									},
									"response": []
								},
								{
									"name": "3 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo ao produto\r",
													"pm.test(\"teste do vinculo ao produto\", () => {\r",
													"  pm.expect(jsonData.produtos).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"mwe\",\r\n  \"categoriaId\": 3\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria"
									},
									"response": []
								},
								{
									"name": "25 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"\r",
													"//teste do vinculo ao produto\r",
													"pm.test(\"teste do vinculo ao produto\", () => {\r",
													"  pm.expect(jsonData.produtos).to.be.null;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n  \"nome\": \"cestedelimatexcabacstress\",\r\n  \"categoriaId\": 4\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria"
									},
									"response": []
								},
								{
									"name": "50 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo ao produto\r",
													"pm.test(\"teste do vinculo ao produto\", () => {\r",
													"  pm.expect(jsonData.produtos).to.be.null;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n  \"nome\": \"festedelimirexcaaactgressssssssssqssssssssssssssss\",\r\n  \"categoriaId\": 5\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria"
									},
									"response": []
								},
								{
									"name": "51 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"pm.test(\"teste da Mensagem de Erro\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"voce excedeu a quantidade maxima de 50 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n  \"nome\": \"hestedelimitexcaractervssssssssssssssssssssssssssss\",\r\n  \"categoriaId\": 5\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria"
									},
									"response": []
								}
							]
						},
						{
							"name": "Insercao de numeros e caracteres especiais",
							"item": [
								{
									"name": "Numeros",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"123456\",\r\n  \"categoriaId\": 6\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria"
									},
									"response": []
								},
								{
									"name": "letras + numeros",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"AbcD456\",\r\n  \"categoriaId\": 7\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria"
									},
									"response": []
								},
								{
									"name": "Numeros + caracteres especiais",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": " {\r\n  \"nome\": \"123!@#\",\r\n  \"categoriaId\": 7\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria"
									},
									"response": []
								},
								{
									"name": "letras + caracteres especiais",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": " {\r\n  \"nome\": \"Abc!@#\",\r\n  \"categoriaId\": 7\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria"
									},
									"response": []
								},
								{
									"name": "letras + numeros + caracteres especiais",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc123!@#\",\r\n  \"categoriaId\": 5\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"//teste do Status Code",
											"pm.test(\"teste do Status Code\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//teste do Tempo de Resposta",
											"pm.test(\"teste do Tempo de Resposta\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//teste da Mensagem de Erro",
											"const jsonData = pm.response.json();",
											"",
											"pm.test(\"teste da Mensagem de Erro\", () => {",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"O campo nome deve conter apenas letras\");",
											" ",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "#Campo em branco SubCat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"teste da Mensagem de Erro\", () => {\r",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"O campo nome Ã© obrigatÃ³rio\");\r",
											" \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\":\" \",\r\n  \"categoriaId\": 6\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Subcategoria"
							},
							"response": []
						},
						{
							"name": "#Cadastro utilizando nome composto/espaÃ§o no nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo ao produto\r",
											"pm.test(\"teste do vinculo ao produto\", () => {\r",
											"  pm.expect(jsonData.produtos).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"categoriaId\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/subcategoria"
							},
							"response": []
						},
						{
							"name": "#Cadastro de subcategoria em Categoria Inativa",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"pm.test(\"teste da Mensagem de Erro\",() => {\r",
											"  pm.expect(pm.response.text()).to.include(\"NÃ£o Ã© possivel cadastrar uma subcategoria em uma categoria inativa\");\r",
											"});\r",
											" \r",
											"pm.test(\"teste da Mensagem de Erro\",() => {\r",
											"  pm.expect(pm.response.text()).to.include(\"Por favor insira uma categoria valida\");\r",
											"});\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"paggodocedeteate\",\r\n  \"categoriaId\": 7\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Subcategoria"
							},
							"response": []
						},
						{
							"name": "#Cadastro realizado com sucesso SubCat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo ao produto\r",
											"pm.test(\"teste do vinculo ao produto\", () => {\r",
											"  pm.expect(jsonData.produtos).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"categoriaId\": 6\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Subcategoria"
							},
							"response": []
						},
						{
							"name": "#Cadastro duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"pm.test(\"Body contains string\",() => {\r",
											"  pm.expect(pm.response.text()).to.include(\"NÃ£o Ã© possivel cadastrar duas subCategorias com o mesmo nome\");\r",
											"});\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"PaoDoceDeTeste\",\r\n  \"categoriaId\": 4\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Subcategoria"
							},
							"response": []
						}
					]
				},
				{
					"name": "Editar SubCategoria",
					"item": [
						{
							"name": "Teste de Limites",
							"item": [
								{
									"name": "2 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"pm.test(\"teste da Mensagem de Erro\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"minimo de 3 caracteres nÃ£o atingido\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"bc\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria/3"
									},
									"response": []
								},
								{
									"name": "3 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo ao produto\r",
													"pm.test(\"teste do vinculo ao produto\", () => {\r",
													"  pm.expect(jsonData.produtos).to.be.null;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"ban\",\r\n    \"Status\": true\r\n}0",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria/4"
									},
									"response": []
								},
								{
									"name": "25 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo ao produto\r",
													"pm.test(\"teste do vinculo ao produto\", () => {\r",
													"  pm.expect(jsonData.produtos).to.be.null;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"vesqedelimitexaarabvnress\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria/4"
									},
									"response": []
								},
								{
									"name": "50 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"const jsonData = pm.response.json();\r",
													"\r",
													"//teste do ID\r",
													"pm.test(\"teste do ID\", () => {\r",
													"  pm.expect(jsonData.id).to.be.a('number');});\r",
													"\r",
													"//teste do nome \r",
													"pm.test(\"teste do nome\", () => {\r",
													"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
													"\r",
													"//teste do status\r",
													"pm.test(\"teste do status\", () => {\r",
													"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
													"\r",
													"//teste do vinculo ao produto\r",
													"pm.test(\"teste do vinculo ao produto\", () => {\r",
													"  pm.expect(jsonData.produtos).to.be.null;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"testedelbmitexcaaacteresssssssssssbsssjssssssjssms\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria/3"
									},
									"response": []
								},
								{
									"name": "51 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//teste do Status Code\r",
													"pm.test(\"teste do Status Code\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//teste do Tempo de Resposta\r",
													"pm.test(\"teste do Tempo de Resposta\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"//teste da Mensagem de Erro\r",
													"pm.test(\"teste da Mensagem de Erro\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"voce excedeu a quantidade maxima de 50 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Nome\": \"testedelimitexcaracteressssgsssssssssssssssssjssmsr\",\r\n    \"Status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/subcategoria/2"
									},
									"response": []
								}
							]
						},
						{
							"name": "Insercao de numeros e caracteres especiais",
							"item": [
								{
									"name": "Numeros",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"123456\",\r\n \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria/1"
									},
									"response": []
								},
								{
									"name": "letras + numeros",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc123\",\r\n \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria/1"
									},
									"response": []
								},
								{
									"name": "Numeros + caracteres especiais",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"123!@#\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria/1"
									},
									"response": []
								},
								{
									"name": "letras + caracteres especiais",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc!@#\",\r\n \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria/1"
									},
									"response": []
								},
								{
									"name": "letras + numeros + caracteres especiais",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"abc123!@#\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostCat}}/Subcategoria/1"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"//teste do Status Code",
											"pm.test(\"teste do Status Code\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//teste do Tempo de Resposta",
											"pm.test(\"teste do Tempo de Resposta\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											"",
											"//teste da Mensagem de Erro",
											"const jsonData = pm.response.json();",
											"",
											"pm.test(\"teste da Mensagem de Erro\", () => {",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"o Campo nome deve conter apenas letras\");",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "#Campo em branco SubCat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"teste da Mensagem de Erro\", () => {\r",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"O campo nome Ã© obrigatÃ³rio\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Subcategoria/1"
							},
							"response": []
						},
						{
							"name": "#EdiÃ§Ã£o utilizando nome composto/espaÃ§o no nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"padaria aaaaatualizado\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/subcategoria/3"
							},
							"response": []
						},
						{
							"name": "#Edicao de status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"alteracaodestatus\",\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/subcategoria/4"
							},
							"response": []
						},
						{
							"name": "#Cadastro Editado com sucesso SubCat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{$randomLastName}}\",\r\n\"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Subcategoria/3"
							},
							"response": []
						},
						{
							"name": "#Edicao realizada utilizando letra maiuscula",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"PadariaDeTesffeasEasditadoLetraVVV\",\r\n\"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/subcategoria/4"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Centro de distribuiÃ§Ã£o",
			"item": [
				{
					"name": "Teste de limites Centro de Distribuicao",
					"item": [
						{
							"name": "2 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"pm.test(\"teste da Mensagem de Erro\",() => {\r",
											"  pm.expect(pm.response.text()).to.include(\"minimo de 3 caracteres nÃ£o atingido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"fn\",\r\n    \"CEP\":\"03835045\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "3 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"aya\",\r\n    \"CEP\":\"03835045\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "25 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n\r\n{\r\n    \"Nome\":\"testedelimitexcaraatebesh\",\r\n    \"CEP\":\"03835045\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "50 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n\r\n{\r\n    \"Nome\":\"testedelimitebcaracteressssssssssssssssssssssjssms\",\r\n    \"CEP\":\"03835045\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "51 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"pm.test(\"teste da Mensagem de Erro\",() => {\r",
											"  pm.expect(pm.response.text()).to.include(\"voce excedeu a quantidade maxima de 50 caracteres\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"Nome\":\"testedelimitexcaractereysssssssssssssssssssssjssms\",\r\n    \"CEP\":\"03835045\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						}
					]
				},
				{
					"name": "Insercao de letras + numeros + caracteres especiais",
					"item": [
						{
							"name": "letras e numeros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"C3ntr0 de distribuic4o\",\r\n    \"CEP\":\"03835055\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "letras + especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"Centro/de/d!stribuicao\",\r\n    \"CEP\":\"03835055\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "numeros + especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"123!@#\",\r\n    \"CEP\":\"03835055\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "letras + numeros + especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"C3nt4o/de/distribuic4o\",\r\n    \"CEP\":\"03835055\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "letras + virgula",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"Centro, AQUI DO LADO\",\r\n    \"CEP\":\"03835055\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						},
						{
							"name": "letras e hifen",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\":\"Centro-de-distribuicao\",\r\n    \"CEP\":\"03835055\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/centro"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//teste do Status Code",
									"pm.test(\"teste do Status Code\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"//teste do Tempo de Resposta",
									"pm.test(\"teste do Tempo de Resposta\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"//teste da Mensagem de Erro",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"teste da Mensagem de Erro\", () => {",
									"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"O campo nome deve conter apenas letras);",
									" ",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "cadastrar com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//teste do ID\r",
									"pm.test(\"teste do ID\", () => {\r",
									"  pm.expect(jsonData.id).to.be.a('number');});\r",
									"\r",
									"//teste do nome \r",
									"pm.test(\"teste do nome\", () => {\r",
									"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
									"\r",
									"//teste do status\r",
									"pm.test(\"teste do status\", () => {\r",
									"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
									"\r",
									" \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"cep\": \"02679010\",\r\n  \"numero\": {{$randomInt}},\r\n  \"complemento\": \"dessavezvai\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostCat}}/centro"
					},
					"response": []
				},
				{
					"name": "Centro de distribuiÃ§Ã£o Duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"//teste da Mensagem de Erro\r",
									"pm.test(\"Body contains string\",() => {\r",
									"  pm.expect(pm.response.text()).to.include(\"Esse nome de centro de distribuiÃ§Ã£o jÃ¡ existe\");\r",
									"});\r",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Nome\":\"Stefanie\",\r\n    \"CEP\":\"03835045\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostApiVlad}}/centro"
					},
					"response": []
				},
				{
					"name": "Centro de DistribuiÃ§Ã£o em branco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"//teste da Mensagem de Erro\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"teste da Mensagem de Erro\", () => {\r",
									"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"O campo nome Ã© obrigatÃ³rio\");\r",
									" \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Nome\":\" \",\r\n    \"CEP\":\"03835045\",\r\n    \"Numero\":{{$randomInt}},\r\n     \"Complemento\":\"Proximo ao paraiso vejetal\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostApiVlad}}/centro"
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{hostApiVlad}}/centro/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "Produto",
			"item": [
				{
					"name": "Cadastrar Produto",
					"item": [
						{
							"name": "Teste de limites do nome do produto",
							"item": [
								{
									"name": "2 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Tr\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto"
									},
									"response": []
								},
								{
									"name": "3 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Tda\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto"
									},
									"response": []
								},
								{
									"name": "64 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"TestedelimiteXcaracteresssssassssssssssssssssssssssssssssssscsss\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":1\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/produto"
									},
									"response": []
								},
								{
									"name": "128 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"TestedelimiteXcaractereassssssssasssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/produto"
									},
									"response": []
								},
								{
									"name": "129 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"TestedelimiteXcaracteressssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/produto"
									},
									"response": []
								}
							]
						},
						{
							"name": "Teste de Limites  na descricao",
							"item": [
								{
									"name": "2  caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"pe\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto"
									},
									"response": []
								},
								{
									"name": "3 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"avr\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto"
									},
									"response": []
								},
								{
									"name": "256 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeitoÂ paraÂ prepararÂ lanchinhoÂ fimÂ deÂ tardeÂ testeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeaaaeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeaeeeeeeeeeeee\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto"
									},
									"response": []
								},
								{
									"name": "512  caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeitoÂ paraÂ prepararÂ lanchinhoÂ fimÂ deÂ tardeÂ testeeeeeeeeeeeeeeaeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeaeperfeitoÂ paraÂ prepararÂ lanchinhoÂ fimÂ deÂ tardeÂ testeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto"
									},
									"response": []
								},
								{
									"name": "513  caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeitoÂ paraÂ prepararÂ lanchinhoÂ fimÂ deÂ tardeÂ testeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeperfeitoÂ paraÂ prepararÂ lanchinhoÂ fimÂ deÂ tardeÂ testeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto"
									},
									"response": []
								}
							]
						},
						{
							"name": "Obrigatorio Descricao de Produto",
							"item": [
								{
									"name": "Descricao do produto",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Peso",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": ,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Altura",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": ,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Largura",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": ,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Comprimento",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": ,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Valor",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": ,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Quantidade em estoque",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": ,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Centro de distribuicao",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Categoria/subcategoria",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Numeros inteiros Quantidade em estoque",
							"item": [
								{
									"name": "numeros inteiros",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": {{$randomInt}},\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "numeros decimais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 1.30,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "numeros decimais  2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 0.05,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "numeros decimais 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 111111.9,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "numeros decimais 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Trakinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": .05,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								}
							]
						},
						{
							"name": "Insercao de letras e caracteres especiais na <especNum>",
							"item": [
								{
									"name": "Peso",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 10Kg*,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Altura",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 25metros,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Largura",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 15Mts*,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Valor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50R$,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Comprimento",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 144centrimetros,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Quantidade em estoque",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100*3caixas,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "Numeros inteiros nas descricoes em decimal",
							"item": [
								{
									"name": "Valor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 99999999,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Peso",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Altura",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								},
								{
									"name": "Largura",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "mudanÃ§a de status  Categoria/Subcategoria",
							"item": [
								{
									"name": "Mudanca de status da categoria apos vinculo de produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/categoria/1"
									},
									"response": []
								},
								{
									"name": "Mudanca de status da subcategoria apos vinculo de produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/subcategoria/1"
									},
									"response": []
								}
							]
						},
						{
							"name": "Campo em branco Produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"nome\": \"\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/produto"
							},
							"response": []
						},
						{
							"name": "Insercao de caracteres especiais no nome do produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"nome\": \"Tr#kina$\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/produto"
							},
							"response": []
						},
						{
							"name": "Cadastro de Produto realizado com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"nome\": \"{{$randomFileName}}\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":1,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/produto"
							},
							"response": []
						},
						{
							"name": "Vinculo do Produto a categoria/subcategoria inativa",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/produto"
							},
							"response": []
						}
					]
				},
				{
					"name": "Editar Produto",
					"item": [
						{
							"name": "Limite de caracteres na edicao do nome",
							"item": [
								{
									"name": "2 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"BO\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto/1"
									},
									"response": []
								},
								{
									"name": "3 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"bol\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Produto/1"
									},
									"response": []
								},
								{
									"name": "64 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"TestedelimiteXcaracteresssssssssssssssssssssssssssssssssssssssss\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/produto/1"
									},
									"response": []
								},
								{
									"name": "128 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"TestedelimiteXcaracteresssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/produto/1"
									},
									"response": []
								},
								{
									"name": "129 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"TestedelimiteXcaracteressssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/produto/1"
									},
									"response": []
								}
							]
						},
						{
							"name": "Obrigatorio preenchimento das edicoes",
							"item": [
								{
									"name": "Descricao do produto",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Peso",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": ,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Altura",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": ,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Largura",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": ,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Comprimento",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": ,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Valor",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": ,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Quantidade em estoque",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": ,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Centro de distribuicao",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								},
								{
									"name": "Categoria/subcategoria",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/1"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Edicao das <especNum> utilizando letras",
							"item": [
								{
									"name": "Peso",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"nome\": \"traquina\",\r\n    \"descricao\": \"saboroso biscoito recheado\",\r\n    \"peso\": 10Kg,\r\n    \"altura\": 0,\r\n    \"largura\": 0,\r\n    \"comprimento\": 0,\r\n    \"valor\": 20,\r\n    \"quantidadeEmEstoque\": 100,\r\n    \"CentrodeDistribuicaoID\": 1,\r\n    \"status\": true\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/2"
									},
									"response": []
								},
								{
									"name": "Altura",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 25metros,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/2"
									},
									"response": []
								},
								{
									"name": "Largura",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 15Mts*,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/2"
									},
									"response": []
								},
								{
									"name": "Valor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50R$,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/2"
									},
									"response": []
								},
								{
									"name": "Comprimento",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 144centrimetros,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/2"
									},
									"response": []
								},
								{
									"name": "Quantidade em estoque",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"nome\": \"Traquinas\",\r\n        \"descricao\": \"perfeito para preparar lanchinho fim de tarde\",\r\n        \"peso\": 0,\r\n        \"altura\": 0,\r\n        \"largura\": 0,\r\n        \"comprimento\": 0,\r\n        \"valor\": 2.50,\r\n        \"quantidadeEmEstoque\": 100*3caixas,\r\n        \"subCategoriaId\":2,\r\n        \"CentroDeDistribuicaoId\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostApiVlad}}/produto/2"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Edicao de nome e status de produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Bolacha Doce Traks\",\r\n    \"descricao\": \"saboroso biscoito recheado\",\r\n    \"peso\": 0,\r\n    \"altura\": 0,\r\n    \"largura\": 0,\r\n    \"comprimento\": 0,\r\n    \"valor\": 20,\r\n    \"quantidadeEmEstoque\": 100,\r\n    \"CentrodeDistribuicaoID\": 1,\r\n    \"status\": false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/produto/2"
							},
							"response": []
						},
						{
							"name": "Edicao de status de produtos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Bolacha Doce Traks\",\r\n    \"descricao\": \"saboroso biscoito recheado\",\r\n    \"peso\": 0,\r\n    \"altura\": 0,\r\n    \"largura\": 0,\r\n    \"comprimento\": 0,\r\n    \"valor\": 20,\r\n    \"quantidadeEmEstoque\": 100,\r\n    \"CentrodeDistribuicaoID\": 1,\r\n    \"status\": false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/produto/2"
							},
							"response": []
						},
						{
							"name": "Edicao de nome do produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Bolacha Doce Traks\",\r\n    \"descricao\": \"saboroso biscoito recheado\",\r\n    \"peso\": 0,\r\n    \"altura\": 0,\r\n    \"largura\": 0,\r\n    \"comprimento\": 0,\r\n    \"valor\": 20,\r\n    \"quantidadeEmEstoque\": 100,\r\n    \"CentrodeDistribuicaoID\": 1,\r\n    \"status\": true\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostApiVlad}}/produto/1"
							},
							"response": []
						}
					]
				},
				{
					"name": "Pesquisar Produto",
					"item": []
				}
			]
		},
		{
			"name": "Editar Categoria",
			"item": [
				{
					"name": "Teste de Limites",
					"item": [
						{
							"name": "2 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"teste da Mensagem de Erro\", () => {\r",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql('minimo de 3 caracteres nÃ£o atingido');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\": \"ur\",\r\n    \"Status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/3"
							},
							"response": []
						},
						{
							"name": "3 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\": \"crb\",\r\n    \"Status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/5"
							},
							"response": []
						},
						{
							"name": "25 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\": \"testedecarateressssssstes\",\r\n    \"Status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/4"
							},
							"response": []
						},
						{
							"name": "50 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//teste do ID\r",
											"pm.test(\"teste do ID\", () => {\r",
											"  pm.expect(jsonData.id).to.be.a('number');});\r",
											"\r",
											"//teste do nome \r",
											"pm.test(\"teste do nome\", () => {\r",
											"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
											"\r",
											"//teste do status\r",
											"pm.test(\"teste do status\", () => {\r",
											"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
											"\r",
											"//teste do vinculo a subcategoria\r",
											"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
											"  pm.expect(jsonData.subCategoria).to.be.null;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\": \"testedelpmiteccaracteressssssssssssssssssssassssss\",\r\n    \"Status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria/4"
							},
							"response": []
						},
						{
							"name": "51 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//teste do Status Code\r",
											"pm.test(\"teste do Status Code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//teste do Tempo de Resposta\r",
											"pm.test(\"teste do Tempo de Resposta\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//teste da Mensagem de Erro\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"teste da Mensagem de Erro\", () => {\r",
											"  pm.expect(jsonData.errors.Nome[0]).to.eql('O campo nome excedeu a quantidade maxima de 50 caracteres');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Nome\": \"testedelimitexcaracteresssrosssssssssssssssssssssss\",\r\n    \"Status\": true\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria/6"
							},
							"response": []
						}
					]
				},
				{
					"name": "AlteraÃ§Ã£o com numeros e caracteres especiais",
					"item": [
						{
							"name": "Numeros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"23456\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria/86"
							},
							"response": []
						},
						{
							"name": "letras + numeros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Zer0\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/categoria/85"
							},
							"response": []
						},
						{
							"name": "Numeros + caracteres especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"234!@#\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria/85"
							},
							"response": []
						},
						{
							"name": "letras + caracteres especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"34$!\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria/85"
							},
							"response": []
						},
						{
							"name": "letras + numeros + caracteres especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"abc234!@#\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{hostCat}}/Categoria/85"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"//teste do Status Code",
									"pm.test(\"teste do Status Code\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"//teste do Tempo de Resposta",
									"pm.test(\"teste do Tempo de Resposta\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"//teste da Mensagem de Erro",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"teste da Mensagem de Erro\", () => {",
									"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"o Campo nome deve conter apenas letras\");",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "#EdiÃ§Ã£o utilizando nome composto/espaÃ§o no nome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//teste do ID\r",
									"pm.test(\"teste do ID\", () => {\r",
									"  pm.expect(jsonData.id).to.be.a('number');});\r",
									"\r",
									"//teste do nome \r",
									"pm.test(\"teste do nome\", () => {\r",
									"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
									"\r",
									"//teste do status\r",
									"pm.test(\"teste do status\", () => {\r",
									"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
									"\r",
									"//teste do vinculo a subcategoria\r",
									"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
									"  pm.expect(jsonData.subCategoria).to.be.null;\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"testa testa\",\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostCat}}/categoria/2"
					},
					"response": []
				},
				{
					"name": "#Edicao em branco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"\r",
									"//teste da Mensagem de Erro\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"teste da Mensagem de Erro\", () => {\r",
									"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"O campo nome Ã© obrigatÃ³rio\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Nome\": \" \",\r\n    \"Status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostCat}}/categoria/4"
					},
					"response": []
				},
				{
					"name": "#Edicao de nome e status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//teste do ID\r",
									"pm.test(\"teste do ID\", () => {\r",
									"  pm.expect(jsonData.id).to.be.a('number');});\r",
									"\r",
									"//teste do nome \r",
									"pm.test(\"teste do nome\", () => {\r",
									"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
									"\r",
									"//teste do status\r",
									"pm.test(\"teste do status\", () => {\r",
									"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
									"\r",
									"//teste do vinculo a subcategoria\r",
									"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
									"  pm.expect(jsonData.subCategoria).to.be.null;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"tstnomstat\",\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostCat}}/categoria/9"
					},
					"response": []
				},
				{
					"name": "#Edicao de status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//teste do ID\r",
									"pm.test(\"teste do ID\", () => {\r",
									"  pm.expect(jsonData.id).to.be.a('number');});\r",
									"\r",
									"//teste do nome \r",
									"pm.test(\"teste do nome\", () => {\r",
									"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
									"\r",
									"//teste do status\r",
									"pm.test(\"teste do status\", () => {\r",
									"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
									"\r",
									"//teste do vinculo a subcategoria\r",
									"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
									"  pm.expect(jsonData.subCategoria).to.be.null;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Konopelski\",\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostCat}}/categoria/5"
					},
					"response": []
				},
				{
					"name": "#Cadastro editado com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"//teste do ID\r",
									"pm.test(\"teste do ID\", () => {\r",
									"  pm.expect(jsonData.id).to.be.a('number');});\r",
									"\r",
									"//teste do nome \r",
									"pm.test(\"teste do nome\", () => {\r",
									"  pm.expect(jsonData.nome).to.be.a(\"string\");});\r",
									"\r",
									"//teste do status\r",
									"pm.test(\"teste do status\", () => {\r",
									"  pm.expect(jsonData.status).to.be.a(\"boolean\");});\r",
									"\r",
									"//teste do vinculo a subcategoria\r",
									"pm.test(\"teste do vinculo a subcategoria\", () => {\r",
									"  pm.expect(jsonData.subCategoria).to.be.null;\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{$randomLastName}}\",\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostCat}}/categoria/4"
					},
					"response": []
				},
				{
					"name": "#Cadastro editado nome duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//teste do Status Code\r",
									"pm.test(\"teste do Status Code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//teste do Tempo de Resposta\r",
									"pm.test(\"teste do Tempo de Resposta\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"//teste da Mensagem de Erro\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"teste da Mensagem de Erro\", () => {\r",
									"  pm.expect(jsonData.errors.Nome[0]).to.eql(\"A categoria ja existe\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Joseph\",\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{hostCat}}/categoria/4"
					},
					"response": []
				}
			]
		},
		{
			"name": "Testes Regressivos",
			"item": [
				{
					"name": "Testes Regressivos de Categorias",
					"item": [
						{
							"name": "Cadastrar Categoria",
							"item": [
								{
									"name": "#Cadastro utilizando nome composto/espaÃ§o no nome Copy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Padaria de teste\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Categoria"
									},
									"response": []
								},
								{
									"name": "#Campo em branco Copy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Categoria"
									},
									"response": []
								},
								{
									"name": "1 caractere Copy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"a\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{hostapivlad}}/Categoria"
									},
									"response": []
								},
								{
									"name": "129 caracteres Copy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"TestedelimiteXcaracteressssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/Categoria"
									},
									"response": []
								}
							]
						},
						{
							"name": "Editar Categoria",
							"item": [
								{
									"name": "1 caractere Copy",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"a\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/categoria/5"
									},
									"response": []
								},
								{
									"name": "#EdiÃ§Ã£o utilizando nome composto/espaÃ§o no nome Copy",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Padaria Regressivo\",\r\n  \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{servidor}}/categoria/4"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Testes Regressivos de SubCategorias",
					"item": [
						{
							"name": "129 caracteres Copy",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"TestedelimiteXcaracteressssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\"\r\n \"categoriaId\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{servidor}}/Subcategoria/"
							},
							"response": []
						},
						{
							"name": "#Campo em branco SubCat Copy",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"\",\r\n  \"categoriaId\": 0\r\n}"
								},
								"url": "{{servidor}}/Subcategoria/"
							},
							"response": []
						},
						{
							"name": "129 caracteres Copy",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"TestedelimiteXcaracteressssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\",\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{servidor}}/Subcategoria"
							},
							"response": []
						},
						{
							"name": "#Campo em branco SubCat Copy",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"\",\r\n  \"status\": true\r\n}"
								},
								"url": "{{servidor}}/Subcategoria"
							},
							"response": []
						}
					]
				},
				{
					"name": "Testes Regressivos Centro de Distribuicao",
					"item": []
				}
			]
		}
	]
}